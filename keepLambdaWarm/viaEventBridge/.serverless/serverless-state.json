{
  "service": {
    "service": "ric-self-invoking-lambda",
    "serviceObject": {
      "name": "ric-self-invoking-lambda"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "eu-west-1",
      "timeout": 30,
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "AutoInvokingGetLambdaLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/ric-self-invoking-lambda-dev-autoInvokingGetLambda"
            }
          },
          "AutoInvokingPostLambdaLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/ric-self-invoking-lambda-dev-autoInvokingPostLambda"
            }
          },
          "AutoInvokingPutLambdaLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/ric-self-invoking-lambda-dev-autoInvokingPutLambda"
            }
          },
          "AutoInvokingDeleteLambdaLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/ric-self-invoking-lambda-dev-autoInvokingDeleteLambda"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "ric-self-invoking-lambda",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ric-self-invoking-lambda-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ric-self-invoking-lambda-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "ric-self-invoking-lambda",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "AutoInvokingGetLambdaLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-west-1-2843d33d-7e87",
                "S3Key": "serverless/ric-self-invoking-lambda/dev/1733981009115-2024-12-12T05:23:29.115Z/ric-self-invoking-lambda.zip"
              },
              "Handler": "autoInvokingGetLambda.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "ric-self-invoking-lambda-dev-autoInvokingGetLambda",
              "MemorySize": 1024,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "TABLE_NAME": "RIC-EMPLOYEEE-TABLE"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:eu-west-1:557690584148:layer:dependencies-layer:13"
              ]
            },
            "DependsOn": [
              "AutoInvokingGetLambdaLogGroup"
            ]
          },
          "AutoInvokingPostLambdaLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-west-1-2843d33d-7e87",
                "S3Key": "serverless/ric-self-invoking-lambda/dev/1733981009115-2024-12-12T05:23:29.115Z/ric-self-invoking-lambda.zip"
              },
              "Handler": "autoInvokingPostLambda.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "ric-self-invoking-lambda-dev-autoInvokingPostLambda",
              "MemorySize": 1024,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "TABLE_NAME": "RIC-EMPLOYEEE-TABLE"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:eu-west-1:557690584148:layer:dependencies-layer:13"
              ]
            },
            "DependsOn": [
              "AutoInvokingPostLambdaLogGroup"
            ]
          },
          "AutoInvokingPutLambdaLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-west-1-2843d33d-7e87",
                "S3Key": "serverless/ric-self-invoking-lambda/dev/1733981009115-2024-12-12T05:23:29.115Z/ric-self-invoking-lambda.zip"
              },
              "Handler": "autoInvokingPutLambda.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "ric-self-invoking-lambda-dev-autoInvokingPutLambda",
              "MemorySize": 1024,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "TABLE_NAME": "RIC-EMPLOYEEE-TABLE"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:eu-west-1:557690584148:layer:dependencies-layer:13"
              ]
            },
            "DependsOn": [
              "AutoInvokingPutLambdaLogGroup"
            ]
          },
          "AutoInvokingDeleteLambdaLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-west-1-2843d33d-7e87",
                "S3Key": "serverless/ric-self-invoking-lambda/dev/1733981009115-2024-12-12T05:23:29.115Z/ric-self-invoking-lambda.zip"
              },
              "Handler": "autoInvokingDeleteLambda.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "ric-self-invoking-lambda-dev-autoInvokingDeleteLambda",
              "MemorySize": 1024,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "TABLE_NAME": "RIC-EMPLOYEEE-TABLE"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:eu-west-1:557690584148:layer:dependencies-layer:13"
              ]
            },
            "DependsOn": [
              "AutoInvokingDeleteLambdaLogGroup"
            ]
          },
          "AutoInvokingGetLambdaLambdaVersionBoQJmthL53AHwqK9Hsv8CIl3YFogZwOY7kymGBMSxw0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AutoInvokingGetLambdaLambdaFunction"
              },
              "CodeSha256": "MoxSqBOvjocwrJumHYehnpammsMISBM8HHMbI9QyHic="
            }
          },
          "AutoInvokingPostLambdaLambdaVersionZx0f33pJdMjP2ziJJo2i8pfx0Idh6nhHsBok3UOxk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AutoInvokingPostLambdaLambdaFunction"
              },
              "CodeSha256": "MoxSqBOvjocwrJumHYehnpammsMISBM8HHMbI9QyHic="
            }
          },
          "AutoInvokingPutLambdaLambdaVersionSHsxYiWoJuinhxMkEPFEaIJpftlPze902GTYHWoPAo": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AutoInvokingPutLambdaLambdaFunction"
              },
              "CodeSha256": "MoxSqBOvjocwrJumHYehnpammsMISBM8HHMbI9QyHic="
            }
          },
          "AutoInvokingDeleteLambdaLambdaVersion4q5i5rdm0VujIs6If39G3QfMu9M6EsMxdsrWtrs2A": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AutoInvokingDeleteLambdaLambdaFunction"
              },
              "CodeSha256": "MoxSqBOvjocwrJumHYehnpammsMISBM8HHMbI9QyHic="
            }
          },
          "RicselfinvokinglambdadevautoInvokingGetLambdarule1EventBridgeRule": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "Name": "ric-self-invoking-lambda-dev-autoInvokingGetLambda-rule-1",
              "ScheduleExpression": "rate(3 minutes)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "AutoInvokingGetLambdaLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "ric-self-invoking-lambda-dev-autoInvokingGetLambda-rule-1-target",
                  "Input": "{\"isRequestForKeepLambdaAlive\":true}"
                }
              ]
            }
          },
          "AutoInvokingGetLambdaEventBridgeLambdaPermission1": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "Action": "lambda:InvokeFunction",
              "FunctionName": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"RicselfinvokinglambdadevautoInvokingGetLambdarule1EventBridgeRule\"][\"Properties\"][\"Targets\"][0][\"Arn\"]"
              },
              "Principal": "events.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  ":",
                  [
                    "arn",
                    {
                      "Ref": "AWS::Partition"
                    },
                    "events",
                    {
                      "Ref": "AWS::Region"
                    },
                    {
                      "Ref": "AWS::AccountId"
                    },
                    {
                      "Fn::Join": [
                        "/",
                        [
                          "rule",
                          "ric-self-invoking-lambda-dev-autoInvokingGetLambda-rule-1"
                        ]
                      ]
                    }
                  ]
                ]
              }
            }
          },
          "RicselfinvokinglambdadevautoInvokingPostLambdarule1EventBridgeRule": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "Name": "ric-self-invoking-lambda-dev-autoInvokingPostLambda-rule-1",
              "ScheduleExpression": "rate(3 minutes)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "AutoInvokingPostLambdaLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "ric-self-invoking-lambda-64546929552fdb57d691286e0555eaac-target",
                  "Input": "{\"isRequestForKeepLambdaAlive\":true}"
                }
              ]
            }
          },
          "AutoInvokingPostLambdaEventBridgeLambdaPermission1": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "Action": "lambda:InvokeFunction",
              "FunctionName": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"RicselfinvokinglambdadevautoInvokingPostLambdarule1EventBridgeRule\"][\"Properties\"][\"Targets\"][0][\"Arn\"]"
              },
              "Principal": "events.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  ":",
                  [
                    "arn",
                    {
                      "Ref": "AWS::Partition"
                    },
                    "events",
                    {
                      "Ref": "AWS::Region"
                    },
                    {
                      "Ref": "AWS::AccountId"
                    },
                    {
                      "Fn::Join": [
                        "/",
                        [
                          "rule",
                          "ric-self-invoking-lambda-dev-autoInvokingPostLambda-rule-1"
                        ]
                      ]
                    }
                  ]
                ]
              }
            }
          },
          "RicselfinvokinglambdadevautoInvokingPutLambdarule1EventBridgeRule": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "Name": "ric-self-invoking-lambda-dev-autoInvokingPutLambda-rule-1",
              "ScheduleExpression": "rate(3 minutes)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "AutoInvokingPutLambdaLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "ric-self-invoking-lambda-dev-autoInvokingPutLambda-rule-1-target",
                  "Input": "{\"isRequestForKeepLambdaAlive\":true}"
                }
              ]
            }
          },
          "AutoInvokingPutLambdaEventBridgeLambdaPermission1": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "Action": "lambda:InvokeFunction",
              "FunctionName": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"RicselfinvokinglambdadevautoInvokingPutLambdarule1EventBridgeRule\"][\"Properties\"][\"Targets\"][0][\"Arn\"]"
              },
              "Principal": "events.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  ":",
                  [
                    "arn",
                    {
                      "Ref": "AWS::Partition"
                    },
                    "events",
                    {
                      "Ref": "AWS::Region"
                    },
                    {
                      "Ref": "AWS::AccountId"
                    },
                    {
                      "Fn::Join": [
                        "/",
                        [
                          "rule",
                          "ric-self-invoking-lambda-dev-autoInvokingPutLambda-rule-1"
                        ]
                      ]
                    }
                  ]
                ]
              }
            }
          },
          "RicselfinvokinglambdadevautoInvokingDeleteLambdarule1EventBridgeRule": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "Name": "ric-self-invoking-lambda-dev-autoInvokingDeleteLambda-rule-1",
              "ScheduleExpression": "rate(3 minutes)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "AutoInvokingDeleteLambdaLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "ric-self-invoking-lambda-5107ae374e335de2f312909462756fad-target",
                  "Input": "{\"isRequestForKeepLambdaAlive\":true}"
                }
              ]
            }
          },
          "AutoInvokingDeleteLambdaEventBridgeLambdaPermission1": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "Action": "lambda:InvokeFunction",
              "FunctionName": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"RicselfinvokinglambdadevautoInvokingDeleteLambdarule1EventBridgeRule\"][\"Properties\"][\"Targets\"][0][\"Arn\"]"
              },
              "Principal": "events.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  ":",
                  [
                    "arn",
                    {
                      "Ref": "AWS::Partition"
                    },
                    "events",
                    {
                      "Ref": "AWS::Region"
                    },
                    {
                      "Ref": "AWS::AccountId"
                    },
                    {
                      "Fn::Join": [
                        "/",
                        [
                          "rule",
                          "ric-self-invoking-lambda-dev-autoInvokingDeleteLambda-rule-1"
                        ]
                      ]
                    }
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-eu-west-1-2843d33d-7e87",
            "Export": {
              "Name": "sls-ric-self-invoking-lambda-dev-ServerlessDeploymentBucketName"
            }
          },
          "AutoInvokingGetLambdaLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AutoInvokingGetLambdaLambdaVersionBoQJmthL53AHwqK9Hsv8CIl3YFogZwOY7kymGBMSxw0"
            },
            "Export": {
              "Name": "sls-ric-self-invoking-lambda-dev-AutoInvokingGetLambdaLambdaFunctionQualifiedArn"
            }
          },
          "AutoInvokingPostLambdaLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AutoInvokingPostLambdaLambdaVersionZx0f33pJdMjP2ziJJo2i8pfx0Idh6nhHsBok3UOxk"
            },
            "Export": {
              "Name": "sls-ric-self-invoking-lambda-dev-AutoInvokingPostLambdaLambdaFunctionQualifiedArn"
            }
          },
          "AutoInvokingPutLambdaLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AutoInvokingPutLambdaLambdaVersionSHsxYiWoJuinhxMkEPFEaIJpftlPze902GTYHWoPAo"
            },
            "Export": {
              "Name": "sls-ric-self-invoking-lambda-dev-AutoInvokingPutLambdaLambdaFunctionQualifiedArn"
            }
          },
          "AutoInvokingDeleteLambdaLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AutoInvokingDeleteLambdaLambdaVersion4q5i5rdm0VujIs6If39G3QfMu9M6EsMxdsrWtrs2A"
            },
            "Export": {
              "Name": "sls-ric-self-invoking-lambda-dev-AutoInvokingDeleteLambdaLambdaFunctionQualifiedArn"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "autoInvokingGetLambda": {
        "handler": "autoInvokingGetLambda.handler",
        "events": [
          {
            "eventBridge": {
              "schedule": "rate(3 minutes)",
              "enabled": true,
              "input": {
                "isRequestForKeepLambdaAlive": true
              }
            }
          }
        ],
        "environment": {
          "TABLE_NAME": "RIC-EMPLOYEEE-TABLE"
        },
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AutoInvokingGetLambdaLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "name": "ric-self-invoking-lambda-dev-autoInvokingGetLambda",
        "package": {},
        "memory": 1024,
        "timeout": 30,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "AutoInvokingGetLambdaLambdaVersionBoQJmthL53AHwqK9Hsv8CIl3YFogZwOY7kymGBMSxw0"
      },
      "autoInvokingPostLambda": {
        "handler": "autoInvokingPostLambda.handler",
        "events": [
          {
            "eventBridge": {
              "schedule": "rate(3 minutes)",
              "enabled": true,
              "input": {
                "isRequestForKeepLambdaAlive": true
              }
            }
          }
        ],
        "environment": {
          "TABLE_NAME": "RIC-EMPLOYEEE-TABLE"
        },
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AutoInvokingPostLambdaLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "name": "ric-self-invoking-lambda-dev-autoInvokingPostLambda",
        "package": {},
        "memory": 1024,
        "timeout": 30,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "AutoInvokingPostLambdaLambdaVersionZx0f33pJdMjP2ziJJo2i8pfx0Idh6nhHsBok3UOxk"
      },
      "autoInvokingPutLambda": {
        "handler": "autoInvokingPutLambda.handler",
        "events": [
          {
            "eventBridge": {
              "schedule": "rate(3 minutes)",
              "enabled": true,
              "input": {
                "isRequestForKeepLambdaAlive": true
              }
            }
          }
        ],
        "environment": {
          "TABLE_NAME": "RIC-EMPLOYEEE-TABLE"
        },
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AutoInvokingPutLambdaLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "name": "ric-self-invoking-lambda-dev-autoInvokingPutLambda",
        "package": {},
        "memory": 1024,
        "timeout": 30,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "AutoInvokingPutLambdaLambdaVersionSHsxYiWoJuinhxMkEPFEaIJpftlPze902GTYHWoPAo"
      },
      "autoInvokingDeleteLambda": {
        "handler": "autoInvokingDeleteLambda.handler",
        "events": [
          {
            "eventBridge": {
              "schedule": "rate(3 minutes)",
              "enabled": true,
              "input": {
                "isRequestForKeepLambdaAlive": true
              }
            }
          }
        ],
        "environment": {
          "TABLE_NAME": "RIC-EMPLOYEEE-TABLE"
        },
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AutoInvokingDeleteLambdaLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "name": "ric-self-invoking-lambda-dev-autoInvokingDeleteLambda",
        "package": {},
        "memory": 1024,
        "timeout": 30,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "AutoInvokingDeleteLambdaLambdaVersion4q5i5rdm0VujIs6If39G3QfMu9M6EsMxdsrWtrs2A"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "ric-self-invoking-lambda",
      "org": "x23176458",
      "app": "lambdas",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "app": "lambdas",
    "appId": null,
    "org": "x23176458",
    "orgId": null,
    "layers": {},
    "artifact": "/Users/anilgovindka/CollageDays/Thesis/ric-crud-application/keepLambdaWarm/viaEventBridge/.serverless/ric-self-invoking-lambda.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/ric-self-invoking-lambda/dev/1733981009115-2024-12-12T05:23:29.115Z",
    "artifact": "ric-self-invoking-lambda.zip"
  }
}