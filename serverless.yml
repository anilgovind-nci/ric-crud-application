org: x23176458
app: lambdas
service: ric-crud-application

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-west-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:*"         # Allows access to DynamoDB
        - "logs:*"
        - "secretsmanager:GetSecretValue"
        - lambda:GetLayerVersion
      Resource: "*"
  logs:
    restApi:
      accessLogging: true
      format: '{"requestId":"$context.requestId","ip":"$context.identity.sourceIp","caller":"$context.identity.caller","user":"$context.identity.user","requestTime":"$context.requestTime","httpMethod":"$context.httpMethod","resourcePath":"$context.resourcePath","status":"$context.status","protocol":"$context.protocol","responseLength":"$context.responseLength"}'
      level: INFO  # Choose from INFO | ERROR
      executionLogging: true
      fullExecutionData: true
      roleManagedExternally: false

functions:
  ricGet:
    handler: functions/ric-get.handler
    environment:
      CENTRALISED_LOG_GROUP_NAME: 'RIC-CRUD-log-group'
    layers:
      - arn:aws:lambda:eu-west-1:557690584148:layer:dependencies-layer:13
    events:
      - http:
          path: ric-get
          method: get
  ricPost:
    handler: functions/ric-post.handler
    environment:
      CENTRALISED_LOG_GROUP_NAME: 'RIC-CRUD-log-group'
    layers:
      - arn:aws:lambda:eu-west-1:557690584148:layer:dependencies-layer:13
    events:
      - http:
          path: ric-post
          method: post
  ricDelete:
    handler: functions/ric-delete.handler
    environment:
      CENTRALISED_LOG_GROUP_NAME: 'RIC-CRUD-log-group'
    layers:
      - arn:aws:lambda:eu-west-1:557690584148:layer:dependencies-layer:13
    events:
      - http:
          path: ric-delete
          method: delete
  ricPut:
    handler: functions/ric-put.handler
    environment:
      CENTRALISED_LOG_GROUP_NAME: 'RIC-CRUD-log-group'
    layers:
      - arn:aws:lambda:eu-west-1:557690584148:layer:dependencies-layer:13
    events:
      - http:
          path: ric-put
          method: put