{
  "/Users/anilgovindka/CollageDays/Thesis/ric-crud-application/redisUpdateFunctions": {
    "versionSfCore": null,
    "versionFramework": "4.4.14",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>",
      "sls": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "org": "x23176458",
            "app": "lambdas",
            "service": "ric-redis-operations",
            "provider": {
              "name": "aws",
              "runtime": "nodejs18.x",
              "region": "eu-west-1",
              "timeout": 30,
              "iam": {
                "role": {
                  "statements": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:*",
                        "lambda:GetLayerVersion",
                        "lambda:InvokeFunction"
                      ],
                      "Resource": "*"
                    }
                  ]
                }
              },
              "stage": "dev",
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "RedisTimeAdjustmentsForEndpointsLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/ric-redis-operations-dev-redisTimeAdjustmentsForEndpoints"
                    }
                  },
                  "QueryCloudwatchAndUpdateFunctionTimesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/ric-redis-operations-dev-queryCloudwatchAndUpdateFunctionTimes"
                    }
                  },
                  "KeepLambdasWarmLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/ric-redis-operations-dev-keepLambdasWarm"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "ric-redis-operations",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ric-redis-operations-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ric-redis-operations-dev*:*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:*",
                                  "lambda:GetLayerVersion",
                                  "lambda:InvokeFunction"
                                ],
                                "Resource": "*"
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "ric-redis-operations",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      },
                      "ManagedPolicyArns": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                            ]
                          ]
                        }
                      ]
                    }
                  },
                  "RedisTimeAdjustmentsForEndpointsLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-west-1-2843d33d-7e87",
                        "S3Key": "serverless/ric-redis-operations/dev/1733759358228-2024-12-09T15:49:18.228Z/ric-redis-operations.zip"
                      },
                      "Handler": "./redisTimeAdjustmentsForEndpoints.handler",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "ric-redis-operations-dev-redisTimeAdjustmentsForEndpoints",
                      "MemorySize": 128,
                      "Timeout": 30,
                      "Role": {
                        "Fn::GetAtt": [
                          "RedisFunctionRole",
                          "Arn"
                        ]
                      },
                      "VpcConfig": {
                        "SecurityGroupIds": [
                          "sg-0307564d9956a71fa"
                        ],
                        "SubnetIds": [
                          "subnet-04bdf4b9558e72dee",
                          "subnet-03adaef5d4afc6b48"
                        ]
                      },
                      "Layers": [
                        "arn:aws:lambda:eu-west-1:557690584148:layer:dependencies-layer:13"
                      ]
                    },
                    "DependsOn": [
                      "RedisTimeAdjustmentsForEndpointsLogGroup",
                      "RedisFunctionRole"
                    ]
                  },
                  "QueryCloudwatchAndUpdateFunctionTimesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-west-1-2843d33d-7e87",
                        "S3Key": "serverless/ric-redis-operations/dev/1733759358228-2024-12-09T15:49:18.228Z/ric-redis-operations.zip"
                      },
                      "Handler": "./queryCloudwatchAndUpdateFunctionTimes.handler",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "ric-redis-operations-dev-queryCloudwatchAndUpdateFunctionTimes",
                      "MemorySize": 256,
                      "Timeout": 900,
                      "Environment": {
                        "Variables": {
                          "REDIS_FUNCTION_NAME": {
                            "Ref": "RedisTimeAdjustmentsForEndpointsLambdaFunction"
                          }
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "QueryCloudwatchAndUpdateFunctionTimesLogGroup"
                    ]
                  },
                  "KeepLambdasWarmLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-west-1-2843d33d-7e87",
                        "S3Key": "serverless/ric-redis-operations/dev/1733759358228-2024-12-09T15:49:18.228Z/ric-redis-operations.zip"
                      },
                      "Handler": "./keepLambdasWarm.handler",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "ric-redis-operations-dev-keepLambdasWarm",
                      "MemorySize": 256,
                      "Timeout": 900,
                      "Environment": {
                        "Variables": {
                          "CENTRALISED_LOG_GROUP_NAME": "RIC-CRUD-log-group"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "KeepLambdasWarmLogGroup"
                    ]
                  },
                  "RedisTimeAdjustmentsForEndpointsLambdaVersionm3be0K9K3WNhwljmynCXQy9FCP4yycOeabhqHJJ4Vw": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "RedisTimeAdjustmentsForEndpointsLambdaFunction"
                      },
                      "CodeSha256": "wgTnPp/e+JlETq4+562LuPTOle6gvSzJKt7tmVxMICQ="
                    }
                  },
                  "QueryCloudwatchAndUpdateFunctionTimesLambdaVersion41sTEM9noh1UpLhng7ldKJ9d3asFoGbCgzKbpxfD8": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "QueryCloudwatchAndUpdateFunctionTimesLambdaFunction"
                      },
                      "CodeSha256": "wgTnPp/e+JlETq4+562LuPTOle6gvSzJKt7tmVxMICQ="
                    }
                  },
                  "KeepLambdasWarmLambdaVersion1S0qJsk0anfP6xUcpRnmGVPXDyIET8SHsuVJtNmd8ms": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "KeepLambdasWarmLambdaFunction"
                      },
                      "CodeSha256": "wgTnPp/e+JlETq4+562LuPTOle6gvSzJKt7tmVxMICQ="
                    }
                  },
                  "QueryCloudwatchAndUpdateFunctionTimesEventsRuleSchedule1": {
                    "Type": "AWS::Events::Rule",
                    "Properties": {
                      "ScheduleExpression": "rate(15 minutes)",
                      "State": "ENABLED",
                      "Targets": [
                        {
                          "Arn": {
                            "Fn::GetAtt": [
                              "QueryCloudwatchAndUpdateFunctionTimesLambdaFunction",
                              "Arn"
                            ]
                          },
                          "Id": "queryCloudwatchAndUpdateFunctionTimesSchedule"
                        }
                      ]
                    }
                  },
                  "QueryCloudwatchAndUpdateFunctionTimesLambdaPermissionEventsRuleSchedule1": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "QueryCloudwatchAndUpdateFunctionTimesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "events.amazonaws.com",
                      "SourceArn": {
                        "Fn::GetAtt": [
                          "QueryCloudwatchAndUpdateFunctionTimesEventsRuleSchedule1",
                          "Arn"
                        ]
                      }
                    }
                  },
                  "KeepLambdasWarmEventsRuleSchedule1": {
                    "Type": "AWS::Events::Rule",
                    "Properties": {
                      "ScheduleExpression": "rate(3 minutes)",
                      "State": "DISABLED",
                      "Targets": [
                        {
                          "Arn": {
                            "Fn::GetAtt": [
                              "KeepLambdasWarmLambdaFunction",
                              "Arn"
                            ]
                          },
                          "Id": "keepLambdasWarmSchedule"
                        }
                      ]
                    }
                  },
                  "KeepLambdasWarmLambdaPermissionEventsRuleSchedule1": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "KeepLambdasWarmLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "events.amazonaws.com",
                      "SourceArn": {
                        "Fn::GetAtt": [
                          "KeepLambdasWarmEventsRuleSchedule1",
                          "Arn"
                        ]
                      }
                    }
                  },
                  "RedisFunctionRole": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "RoleName": "redis-function-role",
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": "sts:AssumeRole"
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": "RedisAccessPolicy",
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "secretsmanager:GetSecretValue"
                                ],
                                "Resource": [
                                  "arn:aws:secretsmanager:us-east-1:557690584148:secret:ric-credentials-*"
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "elasticache:DescribeCacheClusters",
                                  "elasticache:DescribeReplicationGroups",
                                  "elasticache:DescribeCacheSubnetGroups",
                                  "elasticache:ListTagsForResource"
                                ],
                                "Resource": "*"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-eu-west-1-2843d33d-7e87",
                    "Export": {
                      "Name": "sls-ric-redis-operations-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "RedisTimeAdjustmentsForEndpointsLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "RedisTimeAdjustmentsForEndpointsLambdaVersionm3be0K9K3WNhwljmynCXQy9FCP4yycOeabhqHJJ4Vw"
                    },
                    "Export": {
                      "Name": "sls-ric-redis-operations-dev-RedisTimeAdjustmentsForEndpointsLambdaFunctionQualifiedArn"
                    }
                  },
                  "QueryCloudwatchAndUpdateFunctionTimesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "QueryCloudwatchAndUpdateFunctionTimesLambdaVersion41sTEM9noh1UpLhng7ldKJ9d3asFoGbCgzKbpxfD8"
                    },
                    "Export": {
                      "Name": "sls-ric-redis-operations-dev-QueryCloudwatchAndUpdateFunctionTimesLambdaFunctionQualifiedArn"
                    }
                  },
                  "KeepLambdasWarmLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "KeepLambdasWarmLambdaVersion1S0qJsk0anfP6xUcpRnmGVPXDyIET8SHsuVJtNmd8ms"
                    },
                    "Export": {
                      "Name": "sls-ric-redis-operations-dev-KeepLambdasWarmLambdaFunctionQualifiedArn"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "functions": {
              "redisTimeAdjustmentsForEndpoints": {
                "handler": "./redisTimeAdjustmentsForEndpoints.handler",
                "layers": [
                  "arn:aws:lambda:eu-west-1:557690584148:layer:dependencies-layer:13"
                ],
                "memorySize": 128,
                "timeout": 30,
                "events": [],
                "vpc": {
                  "securityGroupIds": [
                    "sg-0307564d9956a71fa"
                  ],
                  "subnetIds": [
                    "subnet-04bdf4b9558e72dee",
                    "subnet-03adaef5d4afc6b48"
                  ]
                },
                "role": "RedisFunctionRole",
                "name": "ric-redis-operations-dev-redisTimeAdjustmentsForEndpoints",
                "package": {},
                "memory": 128,
                "runtime": "nodejs18.x",
                "versionLogicalId": "RedisTimeAdjustmentsForEndpointsLambdaVersionm3be0K9K3WNhwljmynCXQy9FCP4yycOeabhqHJJ4Vw"
              },
              "queryCloudwatchAndUpdateFunctionTimes": {
                "handler": "./queryCloudwatchAndUpdateFunctionTimes.handler",
                "memorySize": 256,
                "timeout": 900,
                "environment": {
                  "REDIS_FUNCTION_NAME": {
                    "Ref": "RedisTimeAdjustmentsForEndpointsLambdaFunction"
                  }
                },
                "events": [
                  {
                    "schedule": {
                      "rate": [
                        "rate(15 minutes)"
                      ],
                      "enabled": true
                    }
                  }
                ],
                "name": "ric-redis-operations-dev-queryCloudwatchAndUpdateFunctionTimes",
                "package": {},
                "memory": 256,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "QueryCloudwatchAndUpdateFunctionTimesLambdaVersion41sTEM9noh1UpLhng7ldKJ9d3asFoGbCgzKbpxfD8"
              },
              "keepLambdasWarm": {
                "handler": "./keepLambdasWarm.handler",
                "memorySize": 256,
                "timeout": 900,
                "environment": {
                  "CENTRALISED_LOG_GROUP_NAME": "RIC-CRUD-log-group"
                },
                "events": [
                  {
                    "schedule": {
                      "rate": [
                        "rate(3 minutes)"
                      ],
                      "enabled": false
                    }
                  }
                ],
                "name": "ric-redis-operations-dev-keepLambdasWarm",
                "package": {},
                "memory": 256,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "KeepLambdasWarmLambdaVersion1S0qJsk0anfP6xUcpRnmGVPXDyIET8SHsuVJtNmd8ms"
              }
            },
            "resources": {
              "Resources": {
                "RedisFunctionRole": {
                  "Type": "AWS::IAM::Role",
                  "Properties": {
                    "RoleName": "redis-function-role",
                    "AssumeRolePolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Principal": {
                            "Service": [
                              "lambda.amazonaws.com"
                            ]
                          },
                          "Action": "sts:AssumeRole"
                        }
                      ]
                    },
                    "Policies": [
                      {
                        "PolicyName": "RedisAccessPolicy",
                        "PolicyDocument": {
                          "Version": "2012-10-17",
                          "Statement": [
                            {
                              "Effect": "Allow",
                              "Action": [
                                "secretsmanager:GetSecretValue"
                              ],
                              "Resource": [
                                "arn:aws:secretsmanager:us-east-1:557690584148:secret:ric-credentials-*"
                              ]
                            },
                            {
                              "Effect": "Allow",
                              "Action": [
                                "elasticache:DescribeCacheClusters",
                                "elasticache:DescribeReplicationGroups",
                                "elasticache:DescribeCacheSubnetGroups",
                                "elasticache:ListTagsForResource"
                              ],
                              "Resource": "*"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              },
              "Outputs": {}
            }
          },
          "configFileDirPath": "/Users/anilgovindka/CollageDays/Thesis/ric-crud-application/redisUpdateFunctions",
          "config": {
            "type": "sls"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null,
          "logger": {
            "namespace": "s:core:resolver:sls",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "/Users/anilgovindka/CollageDays/Thesis/ric-crud-application/redisUpdateFunctions",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "x23176458",
      "app": "lambdas",
      "service": "ric-redis-operations",
      "provider": {
        "name": "aws",
        "runtime": "nodejs18.x",
        "region": "eu-west-1",
        "timeout": 30,
        "iam": {
          "role": {
            "statements": [
              {
                "Effect": "Allow",
                "Action": [
                  "logs:*",
                  "lambda:GetLayerVersion",
                  "lambda:InvokeFunction"
                ],
                "Resource": "*"
              }
            ]
          }
        },
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "RedisTimeAdjustmentsForEndpointsLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/ric-redis-operations-dev-redisTimeAdjustmentsForEndpoints"
              }
            },
            "QueryCloudwatchAndUpdateFunctionTimesLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/ric-redis-operations-dev-queryCloudwatchAndUpdateFunctionTimes"
              }
            },
            "KeepLambdasWarmLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/ric-redis-operations-dev-keepLambdasWarm"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "ric-redis-operations",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ric-redis-operations-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ric-redis-operations-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:*",
                            "lambda:GetLayerVersion",
                            "lambda:InvokeFunction"
                          ],
                          "Resource": "*"
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "ric-redis-operations",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                },
                "ManagedPolicyArns": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                      ]
                    ]
                  }
                ]
              }
            },
            "RedisTimeAdjustmentsForEndpointsLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-west-1-2843d33d-7e87",
                  "S3Key": "serverless/ric-redis-operations/dev/1733759358228-2024-12-09T15:49:18.228Z/ric-redis-operations.zip"
                },
                "Handler": "./redisTimeAdjustmentsForEndpoints.handler",
                "Runtime": "nodejs18.x",
                "FunctionName": "ric-redis-operations-dev-redisTimeAdjustmentsForEndpoints",
                "MemorySize": 128,
                "Timeout": 30,
                "Role": {
                  "Fn::GetAtt": [
                    "RedisFunctionRole",
                    "Arn"
                  ]
                },
                "VpcConfig": {
                  "SecurityGroupIds": [
                    "sg-0307564d9956a71fa"
                  ],
                  "SubnetIds": [
                    "subnet-04bdf4b9558e72dee",
                    "subnet-03adaef5d4afc6b48"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:eu-west-1:557690584148:layer:dependencies-layer:13"
                ]
              },
              "DependsOn": [
                "RedisTimeAdjustmentsForEndpointsLogGroup",
                "RedisFunctionRole"
              ]
            },
            "QueryCloudwatchAndUpdateFunctionTimesLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-west-1-2843d33d-7e87",
                  "S3Key": "serverless/ric-redis-operations/dev/1733759358228-2024-12-09T15:49:18.228Z/ric-redis-operations.zip"
                },
                "Handler": "./queryCloudwatchAndUpdateFunctionTimes.handler",
                "Runtime": "nodejs18.x",
                "FunctionName": "ric-redis-operations-dev-queryCloudwatchAndUpdateFunctionTimes",
                "MemorySize": 256,
                "Timeout": 900,
                "Environment": {
                  "Variables": {
                    "REDIS_FUNCTION_NAME": {
                      "Ref": "RedisTimeAdjustmentsForEndpointsLambdaFunction"
                    }
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "QueryCloudwatchAndUpdateFunctionTimesLogGroup"
              ]
            },
            "KeepLambdasWarmLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-west-1-2843d33d-7e87",
                  "S3Key": "serverless/ric-redis-operations/dev/1733759358228-2024-12-09T15:49:18.228Z/ric-redis-operations.zip"
                },
                "Handler": "./keepLambdasWarm.handler",
                "Runtime": "nodejs18.x",
                "FunctionName": "ric-redis-operations-dev-keepLambdasWarm",
                "MemorySize": 256,
                "Timeout": 900,
                "Environment": {
                  "Variables": {
                    "CENTRALISED_LOG_GROUP_NAME": "RIC-CRUD-log-group"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "KeepLambdasWarmLogGroup"
              ]
            },
            "RedisTimeAdjustmentsForEndpointsLambdaVersionm3be0K9K3WNhwljmynCXQy9FCP4yycOeabhqHJJ4Vw": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "RedisTimeAdjustmentsForEndpointsLambdaFunction"
                },
                "CodeSha256": "wgTnPp/e+JlETq4+562LuPTOle6gvSzJKt7tmVxMICQ="
              }
            },
            "QueryCloudwatchAndUpdateFunctionTimesLambdaVersion41sTEM9noh1UpLhng7ldKJ9d3asFoGbCgzKbpxfD8": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "QueryCloudwatchAndUpdateFunctionTimesLambdaFunction"
                },
                "CodeSha256": "wgTnPp/e+JlETq4+562LuPTOle6gvSzJKt7tmVxMICQ="
              }
            },
            "KeepLambdasWarmLambdaVersion1S0qJsk0anfP6xUcpRnmGVPXDyIET8SHsuVJtNmd8ms": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "KeepLambdasWarmLambdaFunction"
                },
                "CodeSha256": "wgTnPp/e+JlETq4+562LuPTOle6gvSzJKt7tmVxMICQ="
              }
            },
            "QueryCloudwatchAndUpdateFunctionTimesEventsRuleSchedule1": {
              "Type": "AWS::Events::Rule",
              "Properties": {
                "ScheduleExpression": "rate(15 minutes)",
                "State": "ENABLED",
                "Targets": [
                  {
                    "Arn": {
                      "Fn::GetAtt": [
                        "QueryCloudwatchAndUpdateFunctionTimesLambdaFunction",
                        "Arn"
                      ]
                    },
                    "Id": "queryCloudwatchAndUpdateFunctionTimesSchedule"
                  }
                ]
              }
            },
            "QueryCloudwatchAndUpdateFunctionTimesLambdaPermissionEventsRuleSchedule1": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "QueryCloudwatchAndUpdateFunctionTimesLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "events.amazonaws.com",
                "SourceArn": {
                  "Fn::GetAtt": [
                    "QueryCloudwatchAndUpdateFunctionTimesEventsRuleSchedule1",
                    "Arn"
                  ]
                }
              }
            },
            "KeepLambdasWarmEventsRuleSchedule1": {
              "Type": "AWS::Events::Rule",
              "Properties": {
                "ScheduleExpression": "rate(3 minutes)",
                "State": "DISABLED",
                "Targets": [
                  {
                    "Arn": {
                      "Fn::GetAtt": [
                        "KeepLambdasWarmLambdaFunction",
                        "Arn"
                      ]
                    },
                    "Id": "keepLambdasWarmSchedule"
                  }
                ]
              }
            },
            "KeepLambdasWarmLambdaPermissionEventsRuleSchedule1": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "KeepLambdasWarmLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "events.amazonaws.com",
                "SourceArn": {
                  "Fn::GetAtt": [
                    "KeepLambdasWarmEventsRuleSchedule1",
                    "Arn"
                  ]
                }
              }
            },
            "RedisFunctionRole": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "RoleName": "redis-function-role",
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": "sts:AssumeRole"
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": "RedisAccessPolicy",
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "secretsmanager:GetSecretValue"
                          ],
                          "Resource": [
                            "arn:aws:secretsmanager:us-east-1:557690584148:secret:ric-credentials-*"
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "elasticache:DescribeCacheClusters",
                            "elasticache:DescribeReplicationGroups",
                            "elasticache:DescribeCacheSubnetGroups",
                            "elasticache:ListTagsForResource"
                          ],
                          "Resource": "*"
                        }
                      ]
                    }
                  }
                ]
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-eu-west-1-2843d33d-7e87",
              "Export": {
                "Name": "sls-ric-redis-operations-dev-ServerlessDeploymentBucketName"
              }
            },
            "RedisTimeAdjustmentsForEndpointsLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "RedisTimeAdjustmentsForEndpointsLambdaVersionm3be0K9K3WNhwljmynCXQy9FCP4yycOeabhqHJJ4Vw"
              },
              "Export": {
                "Name": "sls-ric-redis-operations-dev-RedisTimeAdjustmentsForEndpointsLambdaFunctionQualifiedArn"
              }
            },
            "QueryCloudwatchAndUpdateFunctionTimesLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "QueryCloudwatchAndUpdateFunctionTimesLambdaVersion41sTEM9noh1UpLhng7ldKJ9d3asFoGbCgzKbpxfD8"
              },
              "Export": {
                "Name": "sls-ric-redis-operations-dev-QueryCloudwatchAndUpdateFunctionTimesLambdaFunctionQualifiedArn"
              }
            },
            "KeepLambdasWarmLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "KeepLambdasWarmLambdaVersion1S0qJsk0anfP6xUcpRnmGVPXDyIET8SHsuVJtNmd8ms"
              },
              "Export": {
                "Name": "sls-ric-redis-operations-dev-KeepLambdasWarmLambdaFunctionQualifiedArn"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "redisTimeAdjustmentsForEndpoints": {
          "handler": "./redisTimeAdjustmentsForEndpoints.handler",
          "layers": [
            "arn:aws:lambda:eu-west-1:557690584148:layer:dependencies-layer:13"
          ],
          "memorySize": 128,
          "timeout": 30,
          "events": [],
          "vpc": {
            "securityGroupIds": [
              "sg-0307564d9956a71fa"
            ],
            "subnetIds": [
              "subnet-04bdf4b9558e72dee",
              "subnet-03adaef5d4afc6b48"
            ]
          },
          "role": "RedisFunctionRole",
          "name": "ric-redis-operations-dev-redisTimeAdjustmentsForEndpoints",
          "package": {},
          "memory": 128,
          "runtime": "nodejs18.x",
          "versionLogicalId": "RedisTimeAdjustmentsForEndpointsLambdaVersionm3be0K9K3WNhwljmynCXQy9FCP4yycOeabhqHJJ4Vw"
        },
        "queryCloudwatchAndUpdateFunctionTimes": {
          "handler": "./queryCloudwatchAndUpdateFunctionTimes.handler",
          "memorySize": 256,
          "timeout": 900,
          "environment": {
            "REDIS_FUNCTION_NAME": {
              "Ref": "RedisTimeAdjustmentsForEndpointsLambdaFunction"
            }
          },
          "events": [
            {
              "schedule": {
                "rate": [
                  "rate(15 minutes)"
                ],
                "enabled": true
              }
            }
          ],
          "name": "ric-redis-operations-dev-queryCloudwatchAndUpdateFunctionTimes",
          "package": {},
          "memory": 256,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "QueryCloudwatchAndUpdateFunctionTimesLambdaVersion41sTEM9noh1UpLhng7ldKJ9d3asFoGbCgzKbpxfD8"
        },
        "keepLambdasWarm": {
          "handler": "./keepLambdasWarm.handler",
          "memorySize": 256,
          "timeout": 900,
          "environment": {
            "CENTRALISED_LOG_GROUP_NAME": "RIC-CRUD-log-group"
          },
          "events": [
            {
              "schedule": {
                "rate": [
                  "rate(3 minutes)"
                ],
                "enabled": false
              }
            }
          ],
          "name": "ric-redis-operations-dev-keepLambdasWarm",
          "package": {},
          "memory": 256,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "KeepLambdasWarmLambdaVersion1S0qJsk0anfP6xUcpRnmGVPXDyIET8SHsuVJtNmd8ms"
        }
      },
      "resources": {
        "Resources": {
          "RedisFunctionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "RoleName": "redis-function-role",
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "RedisAccessPolicy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "secretsmanager:GetSecretValue"
                        ],
                        "Resource": [
                          "arn:aws:secretsmanager:us-east-1:557690584148:secret:ric-credentials-*"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "elasticache:DescribeCacheClusters",
                          "elasticache:DescribeReplicationGroups",
                          "elasticache:DescribeCacheSubnetGroups",
                          "elasticache:ListTagsForResource"
                        ],
                        "Resource": "*"
                      }
                    ]
                  }
                }
              ]
            }
          }
        },
        "Outputs": {}
      }
    },
    "serviceRawFile": "org: x23176458\napp: lambdas\nservice: ric-redis-operations\n\nprovider:\n  name: aws\n  runtime: nodejs18.x\n  region: eu-west-1\n  timeout: 30\n  iam:\n    role:\n      statements:  # Default IAM role permissions for all functions\n        - Effect: \"Allow\"\n          Action:\n            - \"logs:*\"\n            - \"lambda:GetLayerVersion\"\n            - \"lambda:InvokeFunction\"\n          Resource: \"*\"\n\nfunctions:\n  redisTimeAdjustmentsForEndpoints:\n    handler: ./redisTimeAdjustmentsForEndpoints.handler\n    layers:\n      - arn:aws:lambda:eu-west-1:557690584148:layer:dependencies-layer:13\n    memorySize: 128\n    timeout: 30\n    events: []\n    vpc:\n      securityGroupIds:\n        - sg-0307564d9956a71fa\n      subnetIds:\n        - subnet-04bdf4b9558e72dee\n        - subnet-03adaef5d4afc6b48\n    role: RedisFunctionRole  # Custom IAM role for this function\n\n  queryCloudwatchAndUpdateFunctionTimes:\n    handler: ./queryCloudwatchAndUpdateFunctionTimes.handler\n    memorySize: 256 # Increase memory if required\n    timeout: 900 # Maximum timeout of 15 minutes\n    environment:\n      REDIS_FUNCTION_NAME:\n        Ref: RedisTimeAdjustmentsForEndpointsLambdaFunction\n    events:\n      - schedule:\n          rate: rate(15 minutes) # Runs every 15 minutes\n          enabled: true # Ensures the rule is active\n  keepLambdasWarm:\n    handler: ./keepLambdasWarm.handler\n    memorySize: 256 # Increase memory if required\n    timeout: 900 # Maximum timeout of 15 minutes\n    environment:\n      CENTRALISED_LOG_GROUP_NAME: 'RIC-CRUD-log-group'\n    events:\n      - schedule:\n          rate: rate(3 minutes) # Runs every 15 minutes\n          enabled: false # Ensures the rule is active\n\nresources:\n  Resources:\n    RedisFunctionRole:\n      Type: AWS::IAM::Role\n      Properties:\n        RoleName: redis-function-role\n        AssumeRolePolicyDocument:\n          Version: \"2012-10-17\"\n          Statement:\n            - Effect: Allow\n              Principal:\n                Service:\n                  - lambda.amazonaws.com\n              Action: sts:AssumeRole\n        Policies:\n          - PolicyName: RedisAccessPolicy\n            PolicyDocument:\n              Version: \"2012-10-17\"\n              Statement:\n                - Effect: Allow\n                  Action:\n                    - secretsmanager:GetSecretValue\n                  Resource:\n                    - arn:aws:secretsmanager:us-east-1:557690584148:secret:ric-credentials-*\n                - Effect: Allow\n                  Action:\n                    - elasticache:DescribeCacheClusters\n                    - elasticache:DescribeReplicationGroups\n                    - elasticache:DescribeCacheSubnetGroups\n                    - elasticache:ListTagsForResource\n                  Resource: \"*\"\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": null,
    "params": {},
    "machineId": "20eba6744af9fe5142061e39d7ad2d1c",
    "stage": "dev",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "090b084b-ba6a-42dd-b7e5-1be967ea7f51",
    "orgName": "x23176458",
    "userId": "XdxKKCdVJr17w6SZhj",
    "dashboard": {
      "isEnabledForService": true,
      "requiredAuthentication": false,
      "orgFeaturesInUse": {
        "providers": false,
        "monitoring": false
      },
      "orgObservabilityIntegrations": null,
      "serviceAppId": "y9YyTDlK4ZQyYChjHN",
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "x23176458",
    "subscription": null,
    "userEmail": "x23176458@student.ncirl.ie",
    "serviceProviderAwsRegion": "eu-west-1",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "557690584148",
    "projectType": "traditional",
    "versionSf": "4.4.14",
    "serviceProviderAwsCfStackName": "ric-redis-operations-dev",
    "integrations": {},
    "serviceUniqueId": "arn:aws:cloudformation:eu-west-1:557690584148:stack/ric-redis-operations-dev/13be9c20-aa71-11ef-bdf3-0a4bf87a5843",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:eu-west-1:557690584148:stack/ric-redis-operations-dev/13be9c20-aa71-11ef-bdf3-0a4bf87a5843",
    "serviceProviderAwsCfStackCreated": "2024-11-24T14:33:31.193Z",
    "serviceProviderAwsCfStackUpdated": "2024-12-09T15:49:19.593Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "KeepLambdasWarmLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-west-1:557690584148:function:ric-redis-operations-dev-keepLambdasWarm:6",
        "Description": "Current Lambda function version",
        "ExportName": "sls-ric-redis-operations-dev-KeepLambdasWarmLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "RedisTimeAdjustmentsForEndpointsLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-west-1:557690584148:function:ric-redis-operations-dev-redisTimeAdjustmentsForEndpoints:10",
        "Description": "Current Lambda function version",
        "ExportName": "sls-ric-redis-operations-dev-RedisTimeAdjustmentsForEndpointsLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "QueryCloudwatchAndUpdateFunctionTimesLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-west-1:557690584148:function:ric-redis-operations-dev-queryCloudwatchAndUpdateFunctionTimes:9",
        "Description": "Current Lambda function version",
        "ExportName": "sls-ric-redis-operations-dev-QueryCloudwatchAndUpdateFunctionTimesLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-eu-west-1-2843d33d-7e87",
        "ExportName": "sls-ric-redis-operations-dev-ServerlessDeploymentBucketName"
      }
    ]
  },
  "unknown": {
    "versionSfCore": null,
    "versionFramework": "4.4.14",
    "isWithinCompose": false,
    "composeOrgName": null,
    "composeServiceName": null,
    "command": [],
    "options": {
      "version": true
    },
    "error": null,
    "machineId": "529100776e5f7e3c26a3b3a2e8fa17e6",
    "serviceProviderAwsCfStackId": null,
    "serviceProviderAwsCfStackCreated": null,
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": null,
    "serviceProviderAwsCfStackOutputs": null
  }
}