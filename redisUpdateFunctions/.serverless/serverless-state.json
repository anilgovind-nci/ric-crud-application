{
  "service": {
    "service": "ric-redis-operations",
    "serviceObject": {
      "name": "ric-redis-operations"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "eu-west-1",
      "timeout": 30,
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:*",
                "lambda:GetLayerVersion",
                "lambda:InvokeFunction"
              ],
              "Resource": "*"
            }
          ]
        }
      },
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "RedisTimeAdjustmentsForEndpointsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/ric-redis-operations-dev-redisTimeAdjustmentsForEndpoints"
            }
          },
          "QueryCloudwatchAndUpdateFunctionTimesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/ric-redis-operations-dev-queryCloudwatchAndUpdateFunctionTimes"
            }
          },
          "KeepLambdasWarmLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/ric-redis-operations-dev-keepLambdasWarm"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "ric-redis-operations",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ric-redis-operations-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ric-redis-operations-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "ric-redis-operations",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                    ]
                  ]
                }
              ]
            }
          },
          "RedisTimeAdjustmentsForEndpointsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-west-1-2843d33d-7e87",
                "S3Key": "serverless/ric-redis-operations/dev/1733981200286-2024-12-12T05:26:40.286Z/ric-redis-operations.zip"
              },
              "Handler": "./redisTimeAdjustmentsForEndpoints.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "ric-redis-operations-dev-redisTimeAdjustmentsForEndpoints",
              "MemorySize": 128,
              "Timeout": 30,
              "Role": {
                "Fn::GetAtt": [
                  "RedisFunctionRole",
                  "Arn"
                ]
              },
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-0307564d9956a71fa"
                ],
                "SubnetIds": [
                  "subnet-04bdf4b9558e72dee",
                  "subnet-03adaef5d4afc6b48"
                ]
              },
              "Layers": [
                "arn:aws:lambda:eu-west-1:557690584148:layer:dependencies-layer:13"
              ]
            },
            "DependsOn": [
              "RedisTimeAdjustmentsForEndpointsLogGroup",
              "RedisFunctionRole"
            ]
          },
          "QueryCloudwatchAndUpdateFunctionTimesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-west-1-2843d33d-7e87",
                "S3Key": "serverless/ric-redis-operations/dev/1733981200286-2024-12-12T05:26:40.286Z/ric-redis-operations.zip"
              },
              "Handler": "./queryCloudwatchAndUpdateFunctionTimes.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "ric-redis-operations-dev-queryCloudwatchAndUpdateFunctionTimes",
              "MemorySize": 256,
              "Timeout": 900,
              "Environment": {
                "Variables": {
                  "REDIS_FUNCTION_NAME": {
                    "Ref": "RedisTimeAdjustmentsForEndpointsLambdaFunction"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "QueryCloudwatchAndUpdateFunctionTimesLogGroup"
            ]
          },
          "KeepLambdasWarmLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-west-1-2843d33d-7e87",
                "S3Key": "serverless/ric-redis-operations/dev/1733981200286-2024-12-12T05:26:40.286Z/ric-redis-operations.zip"
              },
              "Handler": "./keepLambdasWarm.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "ric-redis-operations-dev-keepLambdasWarm",
              "MemorySize": 256,
              "Timeout": 900,
              "Environment": {
                "Variables": {
                  "CENTRALISED_LOG_GROUP_NAME": "RIC-CRUD-log-group"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "KeepLambdasWarmLogGroup"
            ]
          },
          "RedisTimeAdjustmentsForEndpointsLambdaVersionK3eRf1ruKqhv7U0Nbozn14zXM8zEfCwDzxR1XFU0vEQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "RedisTimeAdjustmentsForEndpointsLambdaFunction"
              },
              "CodeSha256": "vLF+1mZITYFeBhwwfj6sorIXncP3bXfKE2dKUxyBHiI="
            }
          },
          "QueryCloudwatchAndUpdateFunctionTimesLambdaVersionfdE9hyJ6J81M9dnmZIsf38K9FYBmrDb97mqXfcYz71s": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "QueryCloudwatchAndUpdateFunctionTimesLambdaFunction"
              },
              "CodeSha256": "vLF+1mZITYFeBhwwfj6sorIXncP3bXfKE2dKUxyBHiI="
            }
          },
          "KeepLambdasWarmLambdaVersionO6n2EC5gbRvtVL9Eosz2XGVlyTUfoxtl9JbF7TgFy0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "KeepLambdasWarmLambdaFunction"
              },
              "CodeSha256": "vLF+1mZITYFeBhwwfj6sorIXncP3bXfKE2dKUxyBHiI="
            }
          },
          "QueryCloudwatchAndUpdateFunctionTimesEventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "rate(15 minutes)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "QueryCloudwatchAndUpdateFunctionTimesLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "queryCloudwatchAndUpdateFunctionTimesSchedule"
                }
              ]
            }
          },
          "QueryCloudwatchAndUpdateFunctionTimesLambdaPermissionEventsRuleSchedule1": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "QueryCloudwatchAndUpdateFunctionTimesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "events.amazonaws.com",
              "SourceArn": {
                "Fn::GetAtt": [
                  "QueryCloudwatchAndUpdateFunctionTimesEventsRuleSchedule1",
                  "Arn"
                ]
              }
            }
          },
          "KeepLambdasWarmEventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "rate(3 minutes)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "KeepLambdasWarmLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "keepLambdasWarmSchedule"
                }
              ]
            }
          },
          "KeepLambdasWarmLambdaPermissionEventsRuleSchedule1": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "KeepLambdasWarmLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "events.amazonaws.com",
              "SourceArn": {
                "Fn::GetAtt": [
                  "KeepLambdasWarmEventsRuleSchedule1",
                  "Arn"
                ]
              }
            }
          },
          "RedisFunctionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "RoleName": "redis-function-role",
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "RedisAccessPolicy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "secretsmanager:GetSecretValue"
                        ],
                        "Resource": [
                          "arn:aws:secretsmanager:us-east-1:557690584148:secret:ric-credentials-*"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "elasticache:DescribeCacheClusters",
                          "elasticache:DescribeReplicationGroups",
                          "elasticache:DescribeCacheSubnetGroups",
                          "elasticache:ListTagsForResource"
                        ],
                        "Resource": "*"
                      }
                    ]
                  }
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-eu-west-1-2843d33d-7e87",
            "Export": {
              "Name": "sls-ric-redis-operations-dev-ServerlessDeploymentBucketName"
            }
          },
          "RedisTimeAdjustmentsForEndpointsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "RedisTimeAdjustmentsForEndpointsLambdaVersionK3eRf1ruKqhv7U0Nbozn14zXM8zEfCwDzxR1XFU0vEQ"
            },
            "Export": {
              "Name": "sls-ric-redis-operations-dev-RedisTimeAdjustmentsForEndpointsLambdaFunctionQualifiedArn"
            }
          },
          "QueryCloudwatchAndUpdateFunctionTimesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "QueryCloudwatchAndUpdateFunctionTimesLambdaVersionfdE9hyJ6J81M9dnmZIsf38K9FYBmrDb97mqXfcYz71s"
            },
            "Export": {
              "Name": "sls-ric-redis-operations-dev-QueryCloudwatchAndUpdateFunctionTimesLambdaFunctionQualifiedArn"
            }
          },
          "KeepLambdasWarmLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "KeepLambdasWarmLambdaVersionO6n2EC5gbRvtVL9Eosz2XGVlyTUfoxtl9JbF7TgFy0"
            },
            "Export": {
              "Name": "sls-ric-redis-operations-dev-KeepLambdasWarmLambdaFunctionQualifiedArn"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "redisTimeAdjustmentsForEndpoints": {
        "handler": "./redisTimeAdjustmentsForEndpoints.handler",
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"RedisTimeAdjustmentsForEndpointsLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "memorySize": 128,
        "timeout": 30,
        "events": [],
        "vpc": {
          "securityGroupIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"RedisTimeAdjustmentsForEndpointsLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SecurityGroupIds\"]"
          },
          "subnetIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"RedisTimeAdjustmentsForEndpointsLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SubnetIds\"]"
          }
        },
        "role": "RedisFunctionRole",
        "name": "ric-redis-operations-dev-redisTimeAdjustmentsForEndpoints",
        "package": {},
        "memory": 128,
        "runtime": "nodejs18.x",
        "versionLogicalId": "RedisTimeAdjustmentsForEndpointsLambdaVersionK3eRf1ruKqhv7U0Nbozn14zXM8zEfCwDzxR1XFU0vEQ"
      },
      "queryCloudwatchAndUpdateFunctionTimes": {
        "handler": "./queryCloudwatchAndUpdateFunctionTimes.handler",
        "memorySize": 256,
        "timeout": 900,
        "environment": {
          "REDIS_FUNCTION_NAME": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"QueryCloudwatchAndUpdateFunctionTimesLambdaFunction\"][\"Properties\"][\"Environment\"][\"Variables\"][\"REDIS_FUNCTION_NAME\"]"
          }
        },
        "events": [
          {
            "schedule": {
              "rate": [
                "rate(15 minutes)"
              ],
              "enabled": true
            }
          }
        ],
        "name": "ric-redis-operations-dev-queryCloudwatchAndUpdateFunctionTimes",
        "package": {},
        "memory": 256,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "QueryCloudwatchAndUpdateFunctionTimesLambdaVersionfdE9hyJ6J81M9dnmZIsf38K9FYBmrDb97mqXfcYz71s"
      },
      "keepLambdasWarm": {
        "handler": "./keepLambdasWarm.handler",
        "memorySize": 256,
        "timeout": 900,
        "environment": {
          "CENTRALISED_LOG_GROUP_NAME": "RIC-CRUD-log-group"
        },
        "events": [
          {
            "schedule": {
              "rate": [
                "rate(3 minutes)"
              ],
              "enabled": true
            }
          }
        ],
        "name": "ric-redis-operations-dev-keepLambdasWarm",
        "package": {},
        "memory": 256,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "KeepLambdasWarmLambdaVersionO6n2EC5gbRvtVL9Eosz2XGVlyTUfoxtl9JbF7TgFy0"
      }
    },
    "resources": {
      "Resources": {
        "RedisFunctionRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "RoleName": "redis-function-role",
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": "sts:AssumeRole"
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": "RedisAccessPolicy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "secretsmanager:GetSecretValue"
                      ],
                      "Resource": [
                        "arn:aws:secretsmanager:us-east-1:557690584148:secret:ric-credentials-*"
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "elasticache:DescribeCacheClusters",
                        "elasticache:DescribeReplicationGroups",
                        "elasticache:DescribeCacheSubnetGroups",
                        "elasticache:ListTagsForResource"
                      ],
                      "Resource": "*"
                    }
                  ]
                }
              }
            ]
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "org": "x23176458",
      "app": "lambdas",
      "service": "ric-redis-operations",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "app": "lambdas",
    "appId": null,
    "org": "x23176458",
    "orgId": null,
    "layers": {},
    "artifact": "/Users/anilgovindka/CollageDays/Thesis/ric-crud-application/redisUpdateFunctions/.serverless/ric-redis-operations.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/ric-redis-operations/dev/1733981200286-2024-12-12T05:26:40.286Z",
    "artifact": "ric-redis-operations.zip"
  }
}