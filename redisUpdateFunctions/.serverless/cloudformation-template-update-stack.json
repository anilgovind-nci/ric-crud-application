{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "RedisTimeAdjustmentsForEndpointsLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/ric-redis-operations-dev-redisTimeAdjustmentsForEndpoints"
      }
    },
    "QueryCloudwatchAndUpdateFunctionTimesLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/ric-redis-operations-dev-queryCloudwatchAndUpdateFunctionTimes"
      }
    },
    "KeepLambdasWarmLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/ric-redis-operations-dev-keepLambdasWarm"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "ric-redis-operations",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ric-redis-operations-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ric-redis-operations-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:*",
                    "lambda:GetLayerVersion",
                    "lambda:InvokeFunction"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "ric-redis-operations",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "RedisTimeAdjustmentsForEndpointsLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-west-1-2843d33d-7e87",
          "S3Key": "serverless/ric-redis-operations/dev/1733759358228-2024-12-09T15:49:18.228Z/ric-redis-operations.zip"
        },
        "Handler": "./redisTimeAdjustmentsForEndpoints.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "ric-redis-operations-dev-redisTimeAdjustmentsForEndpoints",
        "MemorySize": 128,
        "Timeout": 30,
        "Role": {
          "Fn::GetAtt": [
            "RedisFunctionRole",
            "Arn"
          ]
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            "sg-0307564d9956a71fa"
          ],
          "SubnetIds": [
            "subnet-04bdf4b9558e72dee",
            "subnet-03adaef5d4afc6b48"
          ]
        },
        "Layers": [
          "arn:aws:lambda:eu-west-1:557690584148:layer:dependencies-layer:13"
        ]
      },
      "DependsOn": [
        "RedisTimeAdjustmentsForEndpointsLogGroup",
        "RedisFunctionRole"
      ]
    },
    "QueryCloudwatchAndUpdateFunctionTimesLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-west-1-2843d33d-7e87",
          "S3Key": "serverless/ric-redis-operations/dev/1733759358228-2024-12-09T15:49:18.228Z/ric-redis-operations.zip"
        },
        "Handler": "./queryCloudwatchAndUpdateFunctionTimes.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "ric-redis-operations-dev-queryCloudwatchAndUpdateFunctionTimes",
        "MemorySize": 256,
        "Timeout": 900,
        "Environment": {
          "Variables": {
            "REDIS_FUNCTION_NAME": {
              "Ref": "RedisTimeAdjustmentsForEndpointsLambdaFunction"
            }
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "QueryCloudwatchAndUpdateFunctionTimesLogGroup"
      ]
    },
    "KeepLambdasWarmLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-west-1-2843d33d-7e87",
          "S3Key": "serverless/ric-redis-operations/dev/1733759358228-2024-12-09T15:49:18.228Z/ric-redis-operations.zip"
        },
        "Handler": "./keepLambdasWarm.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "ric-redis-operations-dev-keepLambdasWarm",
        "MemorySize": 256,
        "Timeout": 900,
        "Environment": {
          "Variables": {
            "CENTRALISED_LOG_GROUP_NAME": "RIC-CRUD-log-group"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "KeepLambdasWarmLogGroup"
      ]
    },
    "RedisTimeAdjustmentsForEndpointsLambdaVersionm3be0K9K3WNhwljmynCXQy9FCP4yycOeabhqHJJ4Vw": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "RedisTimeAdjustmentsForEndpointsLambdaFunction"
        },
        "CodeSha256": "wgTnPp/e+JlETq4+562LuPTOle6gvSzJKt7tmVxMICQ="
      }
    },
    "QueryCloudwatchAndUpdateFunctionTimesLambdaVersion41sTEM9noh1UpLhng7ldKJ9d3asFoGbCgzKbpxfD8": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "QueryCloudwatchAndUpdateFunctionTimesLambdaFunction"
        },
        "CodeSha256": "wgTnPp/e+JlETq4+562LuPTOle6gvSzJKt7tmVxMICQ="
      }
    },
    "KeepLambdasWarmLambdaVersion1S0qJsk0anfP6xUcpRnmGVPXDyIET8SHsuVJtNmd8ms": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "KeepLambdasWarmLambdaFunction"
        },
        "CodeSha256": "wgTnPp/e+JlETq4+562LuPTOle6gvSzJKt7tmVxMICQ="
      }
    },
    "QueryCloudwatchAndUpdateFunctionTimesEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(15 minutes)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "QueryCloudwatchAndUpdateFunctionTimesLambdaFunction",
                "Arn"
              ]
            },
            "Id": "queryCloudwatchAndUpdateFunctionTimesSchedule"
          }
        ]
      }
    },
    "QueryCloudwatchAndUpdateFunctionTimesLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "QueryCloudwatchAndUpdateFunctionTimesLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "QueryCloudwatchAndUpdateFunctionTimesEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "KeepLambdasWarmEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(3 minutes)",
        "State": "DISABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "KeepLambdasWarmLambdaFunction",
                "Arn"
              ]
            },
            "Id": "keepLambdasWarmSchedule"
          }
        ]
      }
    },
    "KeepLambdasWarmLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "KeepLambdasWarmLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "KeepLambdasWarmEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "RedisFunctionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "redis-function-role",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "RedisAccessPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "secretsmanager:GetSecretValue"
                  ],
                  "Resource": [
                    "arn:aws:secretsmanager:us-east-1:557690584148:secret:ric-credentials-*"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "elasticache:DescribeCacheClusters",
                    "elasticache:DescribeReplicationGroups",
                    "elasticache:DescribeCacheSubnetGroups",
                    "elasticache:ListTagsForResource"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "serverless-framework-deployments-eu-west-1-2843d33d-7e87",
      "Export": {
        "Name": "sls-ric-redis-operations-dev-ServerlessDeploymentBucketName"
      }
    },
    "RedisTimeAdjustmentsForEndpointsLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "RedisTimeAdjustmentsForEndpointsLambdaVersionm3be0K9K3WNhwljmynCXQy9FCP4yycOeabhqHJJ4Vw"
      },
      "Export": {
        "Name": "sls-ric-redis-operations-dev-RedisTimeAdjustmentsForEndpointsLambdaFunctionQualifiedArn"
      }
    },
    "QueryCloudwatchAndUpdateFunctionTimesLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "QueryCloudwatchAndUpdateFunctionTimesLambdaVersion41sTEM9noh1UpLhng7ldKJ9d3asFoGbCgzKbpxfD8"
      },
      "Export": {
        "Name": "sls-ric-redis-operations-dev-QueryCloudwatchAndUpdateFunctionTimesLambdaFunctionQualifiedArn"
      }
    },
    "KeepLambdasWarmLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "KeepLambdasWarmLambdaVersion1S0qJsk0anfP6xUcpRnmGVPXDyIET8SHsuVJtNmd8ms"
      },
      "Export": {
        "Name": "sls-ric-redis-operations-dev-KeepLambdasWarmLambdaFunctionQualifiedArn"
      }
    }
  }
}